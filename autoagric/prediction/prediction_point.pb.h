// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autoagric/prediction/prediction_point.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_autoagric_2fprediction_2fprediction_5fpoint_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_autoagric_2fprediction_2fprediction_5fpoint_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_autoagric_2fprediction_2fprediction_5fpoint_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_autoagric_2fprediction_2fprediction_5fpoint_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_autoagric_2fprediction_2fprediction_5fpoint_2eproto;
namespace autoagric {
namespace prediction {
class PredictionPathPoint;
struct PredictionPathPointDefaultTypeInternal;
extern PredictionPathPointDefaultTypeInternal _PredictionPathPoint_default_instance_;
class PredictionTrajectoryPoint;
struct PredictionTrajectoryPointDefaultTypeInternal;
extern PredictionTrajectoryPointDefaultTypeInternal _PredictionTrajectoryPoint_default_instance_;
}  // namespace prediction
}  // namespace autoagric
PROTOBUF_NAMESPACE_OPEN
template<> ::autoagric::prediction::PredictionPathPoint* Arena::CreateMaybeMessage<::autoagric::prediction::PredictionPathPoint>(Arena*);
template<> ::autoagric::prediction::PredictionTrajectoryPoint* Arena::CreateMaybeMessage<::autoagric::prediction::PredictionTrajectoryPoint>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace autoagric {
namespace prediction {

// ===================================================================

class PredictionPathPoint final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autoagric.prediction.PredictionPathPoint) */ {
 public:
  inline PredictionPathPoint() : PredictionPathPoint(nullptr) {}
  ~PredictionPathPoint() override;
  explicit constexpr PredictionPathPoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PredictionPathPoint(const PredictionPathPoint& from);
  PredictionPathPoint(PredictionPathPoint&& from) noexcept
    : PredictionPathPoint() {
    *this = ::std::move(from);
  }

  inline PredictionPathPoint& operator=(const PredictionPathPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionPathPoint& operator=(PredictionPathPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionPathPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionPathPoint* internal_default_instance() {
    return reinterpret_cast<const PredictionPathPoint*>(
               &_PredictionPathPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PredictionPathPoint& a, PredictionPathPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionPathPoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionPathPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionPathPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PredictionPathPoint>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PredictionPathPoint& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PredictionPathPoint& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionPathPoint* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autoagric.prediction.PredictionPathPoint";
  }
  protected:
  explicit PredictionPathPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kVelocityHeadingFieldNumber = 3,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double velocity_heading = 3;
  void clear_velocity_heading();
  double velocity_heading() const;
  void set_velocity_heading(double value);
  private:
  double _internal_velocity_heading() const;
  void _internal_set_velocity_heading(double value);
  public:

  // @@protoc_insertion_point(class_scope:autoagric.prediction.PredictionPathPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double x_;
  double y_;
  double velocity_heading_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autoagric_2fprediction_2fprediction_5fpoint_2eproto;
};
// -------------------------------------------------------------------

class PredictionTrajectoryPoint final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autoagric.prediction.PredictionTrajectoryPoint) */ {
 public:
  inline PredictionTrajectoryPoint() : PredictionTrajectoryPoint(nullptr) {}
  ~PredictionTrajectoryPoint() override;
  explicit constexpr PredictionTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PredictionTrajectoryPoint(const PredictionTrajectoryPoint& from);
  PredictionTrajectoryPoint(PredictionTrajectoryPoint&& from) noexcept
    : PredictionTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline PredictionTrajectoryPoint& operator=(const PredictionTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionTrajectoryPoint& operator=(PredictionTrajectoryPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionTrajectoryPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const PredictionTrajectoryPoint*>(
               &_PredictionTrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PredictionTrajectoryPoint& a, PredictionTrajectoryPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionTrajectoryPoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionTrajectoryPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionTrajectoryPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PredictionTrajectoryPoint>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PredictionTrajectoryPoint& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PredictionTrajectoryPoint& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionTrajectoryPoint* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autoagric.prediction.PredictionTrajectoryPoint";
  }
  protected:
  explicit PredictionTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathPointFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // .autoagric.prediction.PredictionPathPoint path_point = 1;
  bool has_path_point() const;
  private:
  bool _internal_has_path_point() const;
  public:
  void clear_path_point();
  const ::autoagric::prediction::PredictionPathPoint& path_point() const;
  PROTOBUF_NODISCARD ::autoagric::prediction::PredictionPathPoint* release_path_point();
  ::autoagric::prediction::PredictionPathPoint* mutable_path_point();
  void set_allocated_path_point(::autoagric::prediction::PredictionPathPoint* path_point);
  private:
  const ::autoagric::prediction::PredictionPathPoint& _internal_path_point() const;
  ::autoagric::prediction::PredictionPathPoint* _internal_mutable_path_point();
  public:
  void unsafe_arena_set_allocated_path_point(
      ::autoagric::prediction::PredictionPathPoint* path_point);
  ::autoagric::prediction::PredictionPathPoint* unsafe_arena_release_path_point();

  // double timestamp = 2;
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // @@protoc_insertion_point(class_scope:autoagric.prediction.PredictionTrajectoryPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::autoagric::prediction::PredictionPathPoint* path_point_;
  double timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autoagric_2fprediction_2fprediction_5fpoint_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PredictionPathPoint

// double x = 1;
inline void PredictionPathPoint::clear_x() {
  x_ = 0;
}
inline double PredictionPathPoint::_internal_x() const {
  return x_;
}
inline double PredictionPathPoint::x() const {
  // @@protoc_insertion_point(field_get:autoagric.prediction.PredictionPathPoint.x)
  return _internal_x();
}
inline void PredictionPathPoint::_internal_set_x(double value) {
  
  x_ = value;
}
inline void PredictionPathPoint::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:autoagric.prediction.PredictionPathPoint.x)
}

// double y = 2;
inline void PredictionPathPoint::clear_y() {
  y_ = 0;
}
inline double PredictionPathPoint::_internal_y() const {
  return y_;
}
inline double PredictionPathPoint::y() const {
  // @@protoc_insertion_point(field_get:autoagric.prediction.PredictionPathPoint.y)
  return _internal_y();
}
inline void PredictionPathPoint::_internal_set_y(double value) {
  
  y_ = value;
}
inline void PredictionPathPoint::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:autoagric.prediction.PredictionPathPoint.y)
}

// double velocity_heading = 3;
inline void PredictionPathPoint::clear_velocity_heading() {
  velocity_heading_ = 0;
}
inline double PredictionPathPoint::_internal_velocity_heading() const {
  return velocity_heading_;
}
inline double PredictionPathPoint::velocity_heading() const {
  // @@protoc_insertion_point(field_get:autoagric.prediction.PredictionPathPoint.velocity_heading)
  return _internal_velocity_heading();
}
inline void PredictionPathPoint::_internal_set_velocity_heading(double value) {
  
  velocity_heading_ = value;
}
inline void PredictionPathPoint::set_velocity_heading(double value) {
  _internal_set_velocity_heading(value);
  // @@protoc_insertion_point(field_set:autoagric.prediction.PredictionPathPoint.velocity_heading)
}

// -------------------------------------------------------------------

// PredictionTrajectoryPoint

// .autoagric.prediction.PredictionPathPoint path_point = 1;
inline bool PredictionTrajectoryPoint::_internal_has_path_point() const {
  return this != internal_default_instance() && path_point_ != nullptr;
}
inline bool PredictionTrajectoryPoint::has_path_point() const {
  return _internal_has_path_point();
}
inline void PredictionTrajectoryPoint::clear_path_point() {
  if (GetArenaForAllocation() == nullptr && path_point_ != nullptr) {
    delete path_point_;
  }
  path_point_ = nullptr;
}
inline const ::autoagric::prediction::PredictionPathPoint& PredictionTrajectoryPoint::_internal_path_point() const {
  const ::autoagric::prediction::PredictionPathPoint* p = path_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::autoagric::prediction::PredictionPathPoint&>(
      ::autoagric::prediction::_PredictionPathPoint_default_instance_);
}
inline const ::autoagric::prediction::PredictionPathPoint& PredictionTrajectoryPoint::path_point() const {
  // @@protoc_insertion_point(field_get:autoagric.prediction.PredictionTrajectoryPoint.path_point)
  return _internal_path_point();
}
inline void PredictionTrajectoryPoint::unsafe_arena_set_allocated_path_point(
    ::autoagric::prediction::PredictionPathPoint* path_point) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_point_);
  }
  path_point_ = path_point;
  if (path_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autoagric.prediction.PredictionTrajectoryPoint.path_point)
}
inline ::autoagric::prediction::PredictionPathPoint* PredictionTrajectoryPoint::release_path_point() {
  
  ::autoagric::prediction::PredictionPathPoint* temp = path_point_;
  path_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::autoagric::prediction::PredictionPathPoint* PredictionTrajectoryPoint::unsafe_arena_release_path_point() {
  // @@protoc_insertion_point(field_release:autoagric.prediction.PredictionTrajectoryPoint.path_point)
  
  ::autoagric::prediction::PredictionPathPoint* temp = path_point_;
  path_point_ = nullptr;
  return temp;
}
inline ::autoagric::prediction::PredictionPathPoint* PredictionTrajectoryPoint::_internal_mutable_path_point() {
  
  if (path_point_ == nullptr) {
    auto* p = CreateMaybeMessage<::autoagric::prediction::PredictionPathPoint>(GetArenaForAllocation());
    path_point_ = p;
  }
  return path_point_;
}
inline ::autoagric::prediction::PredictionPathPoint* PredictionTrajectoryPoint::mutable_path_point() {
  ::autoagric::prediction::PredictionPathPoint* _msg = _internal_mutable_path_point();
  // @@protoc_insertion_point(field_mutable:autoagric.prediction.PredictionTrajectoryPoint.path_point)
  return _msg;
}
inline void PredictionTrajectoryPoint::set_allocated_path_point(::autoagric::prediction::PredictionPathPoint* path_point) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete path_point_;
  }
  if (path_point) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::autoagric::prediction::PredictionPathPoint>::GetOwningArena(path_point);
    if (message_arena != submessage_arena) {
      path_point = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path_point, submessage_arena);
    }
    
  } else {
    
  }
  path_point_ = path_point;
  // @@protoc_insertion_point(field_set_allocated:autoagric.prediction.PredictionTrajectoryPoint.path_point)
}

// double timestamp = 2;
inline void PredictionTrajectoryPoint::clear_timestamp() {
  timestamp_ = 0;
}
inline double PredictionTrajectoryPoint::_internal_timestamp() const {
  return timestamp_;
}
inline double PredictionTrajectoryPoint::timestamp() const {
  // @@protoc_insertion_point(field_get:autoagric.prediction.PredictionTrajectoryPoint.timestamp)
  return _internal_timestamp();
}
inline void PredictionTrajectoryPoint::_internal_set_timestamp(double value) {
  
  timestamp_ = value;
}
inline void PredictionTrajectoryPoint::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:autoagric.prediction.PredictionTrajectoryPoint.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace autoagric

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_autoagric_2fprediction_2fprediction_5fpoint_2eproto
