syntax = "proto3";

package autoagric.canbus;

import "autoagric/common/header.proto";

message Chassis {
  enum DrivingMode {
    COMPLETE_MANUAL = 0; // human drive
    COMPLETE_AUTO_DRIVE = 1;
    AUTO_STEER_ONLY = 2; // only steer
    AUTO_SPEED_ONLY = 3; // include throttle and brake

    // security mode when manual intervention happens, only response status
    EMERGENCY_MODE = 4;

  }

  enum GearPosition {
    GEAR_NONE = 0;
    GEAR_PARKING = 1;
    GEAR_REVERSE = 2;
    GEAR_NEUTRAL = 3;
    GEAR_DRIVE = 4;
    GEAR_LOW = 5;
    GEAR_INVALID = 6;
  }

  enum ErrorCode {
    NO_ERROR = 0;

    CMD_NOT_IN_PERIOD = 1; // control cmd not in period

    // car chassis report error, like steer, brake, throttle, gear fault
    CHASSIS_ERROR = 2;

    // classify the types of the car chassis errors
    CHASSIS_ERROR_ON_STEER = 6;
    CHASSIS_ERROR_ON_BRAKE = 7;
    CHASSIS_ERROR_ON_THROTTLE = 8;
    CHASSIS_ERROR_ON_GEAR = 9;

    MANUAL_INTERVENTION = 3; // human manual intervention

    // receive car chassis can frame not in period
    CHASSIS_CAN_NOT_IN_PERIOD = 4;

    UNKNOWN_ERROR = 5;
  }

  bool engine_started = 3;

  // Engine speed in RPM.
  float engine_rpm = 4;

  // Vehicle Speed in meters per second.
  optional float speed_mps = 5;

  // Vehicle odometer in meters.
  float odometer_m = 6;

  // Fuel range in meters.
  int32 fuel_range_m = 7;

  // Real throttle location in [%], ranging from 0 to 100.
  float throttle_percentage = 8;

  // Real brake location in [%], ranging from 0 to 100.
  float brake_percentage = 9;

  // Real steering location in [%], ranging from -100 to 100.
  // steering_angle / max_steering_angle
  // Clockwise: negative
  // CountClockwise: positive
  optional float steering_percentage = 11;

  // Applied steering torque in [Nm].
  float steering_torque_nm = 12;

  // Parking brake status.
  bool parking_brake = 13;

  // Light signals.
  bool high_beam_signal = 14;
  bool low_beam_signal = 15;
  bool left_turn_signal = 16;
  bool right_turn_signal = 17;
  bool horn = 18;

  bool wiper = 19;
  bool disengage_status = 20;
  DrivingMode driving_mode = 21;
  ErrorCode error_code = 22;
  optional GearPosition gear_location = 23;

  // timestamp for steering module
  double steering_timestamp = 24; // In seconds, with 1e-6 accuracy

  // chassis also needs it own sending timestamp
  autoagric.common.Header header = 25;

  int32 chassis_error_mask = 26;

  //  apollo.common.VehicleSignal signal = 27;

  // Only available for Lincoln now
  //  ChassisGPS chassis_gps = 28;

  //  apollo.common.EngageAdvice engage_advice = 29;

  //  WheelSpeed wheel_speed = 30;

  //  Surround surround = 31;

  // Vehicle registration information
  //  License license = 32 ;

  // Real gear location.
  //  int32 gear_location = 10 ; deprecated use enum
  // replace this [id 23]

  //  apollo.common.VehicleID vehicle_id = 33;

  //  int32 battery_soc_percentage = 34 [default = -1];
}