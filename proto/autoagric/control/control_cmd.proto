syntax = "proto3";
package autoagric.control;

import "autoagric/canbus/chassis.proto";
import "autoagric/common/header.proto";
import "autoagric/common/pnc_point.proto";


enum TurnSignal {
  TURN_NONE = 0;
  TURN_LEFT = 1;
  TURN_RIGHT = 2;
}

message LatencyStats {
   double total_time_ms = 1;
  repeated double controller_time_ms = 2;
   bool total_time_exceeded = 3;
}

// next id : 27
message ControlCommand {
   autoagric.common.Header header = 1;
  // target throttle in percentage [0, 100]
   double throttle = 3;

  // target brake in percentage [0, 100]
   double brake = 4;

  // target non-directional steering rate, in percentage of full scale per
  // second [0, 100]
   double steering_rate = 6;

  // target steering angle, in percentage of full scale [-100, 100]
   double steering_target = 7;

  // parking brake engage. true: engaged
   bool parking_brake = 8;

  // target speed, in m/s
   double speed = 9;

  // target acceleration in m`s^-2
   double acceleration = 10;

  // model reset
   bool reset_model = 16 ;
  // engine on/off, true: engine on
   bool engine_on_off = 17;
  // completion percentage of trajectory planned in last cycle
   double trajectory_fraction = 18;
   autoagric.canbus.Chassis.DrivingMode driving_mode = 19
      ;
   autoagric.canbus.Chassis.GearPosition gear_location = 20;

   Debug debug = 22;
//    autoagric.common.VehicleSignal signal = 23;
   LatencyStats latency_stats = 24;
//    PadMessage pad_msg = 25;
//    apollo.common.EngageAdvice engage_advice = 26;
   bool is_in_safe_mode = 27 ;

  // deprecated fields
   bool left_turn = 13 ;
   bool right_turn = 14 ;
   bool high_beam = 11 ;
   bool low_beam = 12 ;
   bool horn = 15 ;
   TurnSignal turnsignal = 21 ;
}

message SimpleLongitudinalDebug {
   double station_reference = 1;
   double station_error = 2;
   double station_error_limited = 3;
   double preview_station_error = 4;
   double speed_reference = 5;
   double speed_error = 6;
   double speed_controller_input_limited = 7;
   double preview_speed_reference = 8;
   double preview_speed_error = 9;
   double preview_acceleration_reference = 10;
   double acceleration_cmd_closeloop = 11;
   double acceleration_cmd = 12;
   double acceleration_lookup = 13;
   double speed_lookup = 14;
   double calibration_value = 15;
   double throttle_cmd = 16;
   double brake_cmd = 17;
   bool is_full_stop = 18;
   double slope_offset_compensation = 19;
   double current_station = 20;
   double path_remain = 21;
   int32 pid_saturation_status = 22;
   int32 leadlag_saturation_status = 23;
   double speed_offset = 24;
   double current_speed = 25;
   double acceleration_reference = 26;
   double current_acceleration = 27;
   double acceleration_error = 28;
   double jerk_reference = 29;
   double current_jerk = 30;
   double jerk_error = 31;
   autoagric.common.TrajectoryPoint current_matched_point = 32;
   autoagric.common.TrajectoryPoint current_reference_point = 33;
   autoagric.common.TrajectoryPoint preview_reference_point = 34;
}

message SimpleLateralDebug {
   double lateral_error = 1;
   double ref_heading = 2;
   double heading = 3;
   double heading_error = 4;
   double heading_error_rate = 5;
   double lateral_error_rate = 6;
   double curvature = 7;
   double steer_angle = 8;
   double steer_angle_feedforward = 9;
   double steer_angle_lateral_contribution = 10;
   double steer_angle_lateral_rate_contribution = 11;
   double steer_angle_heading_contribution = 12;
   double steer_angle_heading_rate_contribution = 13;
   double steer_angle_feedback = 14;
   double steering_position = 15;
   double ref_speed = 16;
   double steer_angle_limited = 17;

  // time derivative of lateral error rate, in m/s^2
   double lateral_acceleration = 18;
  // second time derivative of lateral error rate, in m/s^3
   double lateral_jerk = 19;

   double ref_heading_rate = 20;
   double heading_rate = 21;

  // heading_acceleration, as known as yaw acceleration, is the time derivative
  // of heading rate,  in rad/s^2
   double ref_heading_acceleration = 22;
   double heading_acceleration = 23;
   double heading_error_acceleration = 24;

  // heading_jerk, as known as yaw jerk, is the second time derivative of
  // heading rate, in rad/s^3
   double ref_heading_jerk = 25;
   double heading_jerk = 26;
   double heading_error_jerk = 27;

  // modified lateral_error and heading_error with look-ahead or look-back
  // station, as the feedback term for control usage
   double lateral_error_feedback = 28;
   double heading_error_feedback = 29;

  // current planning target point
   autoagric.common.TrajectoryPoint current_target_point = 30;

  // Augmented feedback control term in addition to LQR control
   double steer_angle_feedback_augment = 31;

  // Mrac control status and feedback states for steer control
   MracDebug steer_mrac_debug = 32;
   bool steer_mrac_enable_status = 33;
}

message SimpleMPCDebug {
   double lateral_error = 1;
   double ref_heading = 2;
   double heading = 3;
   double heading_error = 4;
   double heading_error_rate = 5;
   double lateral_error_rate = 6;
   double curvature = 7;
   double steer_angle = 8;
   double steer_angle_feedforward = 9;
   double steer_angle_lateral_contribution = 10;
   double steer_angle_lateral_rate_contribution = 11;
   double steer_angle_heading_contribution = 12;
   double steer_angle_heading_rate_contribution = 13;
   double steer_angle_feedback = 14;
   double steering_position = 15;
   double ref_speed = 16;
   double steer_angle_limited = 17;
   double station_reference = 18;
   double station_error = 19;
   double speed_reference = 20;
   double speed_error = 21;
   double acceleration_reference = 22;
   bool is_full_stop = 23;
   double station_feedback = 24;
   double speed_feedback = 25;
   double acceleration_cmd_closeloop = 26;
   double acceleration_cmd = 27;
   double acceleration_lookup = 28;
   double speed_lookup = 29;
   double calibration_value = 30;
   double steer_unconstrained_control_diff = 31;
   double steer_angle_feedforward_compensation = 32;
  repeated double matrix_q_updated = 33;  // matrix_q_updated_ size = 6
  repeated double matrix_r_updated = 34;  // matrix_r_updated_ size = 2

  // time derivative of lateral error rate, in m/s^2
   double lateral_acceleration = 35;
  // second time derivative of lateral error rate, in m/s^3
   double lateral_jerk = 36;

   double ref_heading_rate = 37;
   double heading_rate = 38;

  // heading_acceleration, as known as yaw acceleration, is the time derivative
  // of heading rate,  in rad/s^2
   double ref_heading_acceleration = 39;
   double heading_acceleration = 40;
   double heading_error_acceleration = 41;

  // heading_jerk, as known as yaw jerk, is the second time derivative of
  // heading rate, in rad/s^3
   double ref_heading_jerk = 42;
   double heading_jerk = 43;
   double heading_error_jerk = 44;

   double acceleration_feedback = 45;
   double acceleration_error = 46;
   double jerk_reference = 47;
   double jerk_feedback = 48;
   double jerk_error = 49;
}

message MracDebug {
   int32 mrac_model_order = 1;
  repeated double mrac_reference_state = 2;
  repeated double mrac_state_error = 3;
   MracAdaptiveGain mrac_adaptive_gain = 4;
   int32 mrac_reference_saturation_status = 5;
   int32 mrac_control_saturation_status = 6;
}

message MracAdaptiveGain {
  repeated double state_adaptive_gain = 1;
  repeated double input_adaptive_gain = 2;
  repeated double nonlinear_adaptive_gain = 3;
}

message Debug {
   SimpleLongitudinalDebug simple_lon_debug = 1;
   SimpleLateralDebug simple_lat_debug = 2;
//    InputDebug input_debug = 3;
   SimpleMPCDebug simple_mpc_debug = 4;
}
